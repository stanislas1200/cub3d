#include <string.h>
#include <unistd.h>
#include <sys/wait.h>

#include <stdio.h>

int execute(char **av, char **env, int i)
{
    int fd[2];
    int in_pipe = av[i] && !strcmp(av[i], "|");
    int status;
    if (in_pipe && pipe(fd))
        return (write(2, "error: fatal\n", 13), 1);
    int pid = fork();
    if (!pid)
    {
        av[i] = 0;
        if (in_pipe && (dup2(fd[1], 1) == -1 || close(fd[0]) || close(fd[1])))
            return (write(2, "error: fatal\n", 13), 1);
        execve(av[0], av, env);
        return (write(2, "error: cannot execute ", 22), write(2, av[0], strlen(av[0])), write(2, "\n", 1), 1);
    }
    waitpid(pid, &status, 0);
    if (in_pipe && (dup2(fd[0], 0) || close(fd[0]) || close(fd[1])))
            return (write(2, "error: fatal\n", 13), 1);
    return WEXITSTATUS(status);
}

int cd(char **av, int i)
{
    if (i != 2)
        return (write(2, "error: cd: bad arguments\n", 25), 1);
    else if (chdir(av[1]) == -1)
        return (write(2, "error: cd: cannot change directory to ", 39), write(2, av[1], strlen(av[1])), write(2, "\n", 1), 1);
    return 0;
}

int main(int ac, char **av, char **env)
{
    int status = 0;
    int i = 0;

    if (ac > 1)
    {
        while (av[i] && av[++i])
        {
            av += i;
            i = 0;
            while (av[i] && strcmp(av[i], "|") && strcmp(av[i], ";"))
                i++;
            if (i)
                status = strcmp(av[0], "cd") ? execute(av, env, i) : cd(av, i);
        }
    }
    return status;
}